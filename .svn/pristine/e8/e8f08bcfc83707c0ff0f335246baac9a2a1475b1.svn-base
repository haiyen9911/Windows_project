create database QuanLyMiKho
go

use QuanLyMiKho
go

CREATE TABLE TableFood
(
	id INT IDENTITY PRIMARY KEY,
	name NVARCHAR(100) NOT NULL DEFAULT N'Bàn chưa có tên',
	status NVARCHAR(100) NOT NULL DEFAULT N'Trống',
)
GO

CREATE TABLE Account
(
	id INT IDENTITY PRIMARY KEY,
	UserName NVARCHAR(100),	
	DisplayName NVARCHAR(100) NOT NULL,
	PassWord NVARCHAR(1000) NOT NULL DEFAULT 0,
	Type INT NOT NULL  DEFAULT 0 -- 1: QuanLy && 0: NhanVien
)
GO
CREATE TABLE FoodCategory
(
	id INT IDENTITY PRIMARY KEY,
	name NVARCHAR(100) NOT NULL DEFAULT N'Chưa đặt tên'
)
GO
CREATE TABLE Food
(
	id INT IDENTITY PRIMARY KEY,
	name NVARCHAR(100) NOT NULL DEFAULT N'Chưa đặt tên',
	idCategory INT NOT NULL,
	price FLOAT NOT NULL DEFAULT 0
	
	FOREIGN KEY (idCategory) REFERENCES dbo.FoodCategory(id)
)
GO

CREATE TABLE Bill
(
	id INT IDENTITY PRIMARY KEY,
	DateCheckIn DATE NOT NULL default GETDATE(),
	DateCheckOut DATE,
	idTable INT NOT NULL,
	status INT NOT NULL DEFAULT 0 -- 1: đã thanh toán && 0: chưa thanh toán
	
	FOREIGN KEY (idTable) REFERENCES dbo.TableFood(id)
)
GO
alter table Bill
add discount int

update Bill set discount = 0;
CREATE TABLE BillInfo
(
	id INT IDENTITY PRIMARY KEY,
	idBill INT NOT NULL,
	idFood INT NOT NULL,
	count INT NOT NULL DEFAULT 0
	
	FOREIGN KEY (idBill) REFERENCES dbo.Bill(id),
	FOREIGN KEY (idFood) REFERENCES dbo.Food(id)
)
GO

INSERT INTO dbo.Account
        ( UserName ,
          DisplayName ,
          PassWord ,
          Type
        )
VALUES  ( N'thientrungvo19' , -- UserName 
          N'T.Trung' , -- DisplayName 
          N'123' , -- PassWord 
          1  -- Quanly
        )
GO

INSERT INTO dbo.Account
        ( UserName ,
          DisplayName ,
          PassWord ,
          Type
        )
VALUES  ( N'phancongnam' , -- UserName 
          N'C.Nam' , -- DisplayName 
          N'123' , -- PassWord 
          0  -- nhan vien
        )
GO
--thêm bàn
DECLARE @i INT = 0

WHILE @i <= 10
BEGIN
	INSERT dbo.TableFood ( name)VALUES  ( N'Bàn ' + CAST(@i AS nvarchar(100)))
	SET @i = @i + 1
END

go
create proc USP_GetTableList
as select * from TableFood
go

exec USP_GetTableList

update TableFood set status = N'Có người' where id = 23

--thêm loại món ăn
insert FoodCategory (name) values (N'Mì khô')
insert FoodCategory (name) values (N'Mì Ramen')
insert FoodCategory (name) values (N'Combo')
insert FoodCategory (name) values (N'Nước uống')

-- thêm món ăn
insert Food (name, idCategory, price) values (N'Mì khô trứng',2,75000)
insert Food (name, idCategory, price) values (N'Mì khô đặt biệt',2,95000)
insert Food (name, idCategory, price) values (N'Mì khô tô vừa',2,65000)
insert Food (name, idCategory, price) values (N'Mì khô gà rán',2,95000)
insert Food (name, idCategory, price) values (N'Mì khô phô mai',2,105000)
insert Food (name, idCategory, price) values (N'Mì khô trứng cá tuyết',2,115000)

insert Food (name, idCategory, price) values (N'Mì Ramen súp xương heo',3,80000)
insert Food (name, idCategory, price) values (N'Mì Ramen súp xương heo trứng',3,90000)

insert Food (name, idCategory, price) values (N'Mì khô tô vừa + nước ép dưa hấu',4,85000)
insert Food (name, idCategory, price) values (N'Mì khô đặt biệt + nước cam ép',4,105000)
insert Food (name, idCategory, price) values (N'Mì khô gà rán + nước ép thơm',4,115000)
insert Food (name, idCategory, price) values (N'Cơm chiên + súp miso',4,85000)

insert Food (name, idCategory, price) values (N'Cơm chiên nhật',1,75000)
insert Food (name, idCategory, price) values (N'súp miso rong biển',1,12000)

insert Food (name, idCategory, price) values (N'Coca/Pesi/7up',5,15000)
insert Food (name, idCategory, price) values (N'Nước ép dưa hấu',5,20000)
insert Food (name, idCategory, price) values (N'Nước ép thơm',5,20000)
insert Food (name, idCategory, price) values (N'Nước cam ép',5,20000)

-- thêm bill
insert Bill (DateCheckIn, DateCheckOut, idTable, status) values (GETDATE(),null,23,0)
insert Bill (DateCheckIn, DateCheckOut, idTable, status) values (GETDATE(),null,25,0)
insert Bill (DateCheckIn, DateCheckOut, idTable, status) values (GETDATE(),GETDATE(),24,1)

-- thêm billInfo
insert BillInfo (idBill,idFood,count) values (1,1,2);
insert BillInfo (idBill,idFood,count) values (1,4,5);

insert BillInfo (idBill,idFood,count) values (2,1,2);
insert BillInfo (idBill,idFood,count) values (2,4,5);

insert BillInfo (idBill,idFood,count) values (3,1,2);
insert BillInfo (idBill,idFood,count) values (3,4,5);
--USP_InsertBill-------
go
create proc USP_InsertBill
@idTable int
as
begin
	insert Bill (DateCheckIn, DateCheckOut, idTable, status,discount) values (GETDATE(),null,@idTable,0,0)
end
go
--InsertBillInfo
create proc USP_InsertBillInfo
@idBill int,@idFood int, @count int
as
begin
	declare @isExitBillInfo int;
	declare @foodCount int = 1;
	select @isExitBillInfo = id, @foodCount = count from BillInfo where idBill = @idBill and idFood = @idFood
	if (@isExitBillInfo > 0)
		begin
			declare @newCount int = @foodCount + @count
			if (@newCount > 0) 
				update BillInfo set count = @foodCount + @count where idFood =@idFood
			else
				delete BillInfo where idBill =@idBill and idFood= @idFood
		end
	else
		begin
			insert BillInfo (idBill,idFood,count) values (@idBill,@idFood,@count);
		end
end
go

DROP PROCEDURE USP_InsertBillInfo;
select max(id) from Bill

CREATE TRIGGER UTG_UpdateBillInfo
ON dbo.BillInfo FOR INSERT, UPDATE
AS
BEGIN
	DECLARE @idBill INT
	
	SELECT @idBill = idBill FROM Inserted
	
	DECLARE @idTable INT
	
	SELECT @idTable = idTable FROM dbo.Bill WHERE id = @idBill AND status = 0
	
	UPDATE dbo.TableFood SET status = N'Có người' WHERE id = @idTable
END
GO

CREATE TRIGGER UTG_UpdateBill
ON dbo.Bill FOR UPDATE
AS
BEGIN
	DECLARE @idBill INT
	
	SELECT @idBill = id FROM Inserted	
	
	DECLARE @idTable INT
	
	SELECT @idTable = idTable FROM dbo.Bill WHERE id = @idBill
	
	DECLARE @count int = 0
	
	SELECT @count = COUNT(*) FROM dbo.Bill WHERE idTable = @idTable AND status = 0
	
	IF (@count = 0)
		UPDATE dbo.TableFood SET status = N'Trống' WHERE id = @idTable
END
GO

Select * from account where userName = 'thientrungvo19'

Alter table Bill add totalPrice float
 
 select * from Bill
 delete BillInfo
 delete Bill

 go
create proc USP_GetListBillDate
 @checkIn date, @checkOut date
 as
 begin
 select t.name as [Tên bàn], b.totalPrice as [Tổng tiền], DateCheckIn as [Ngày vào], DateCheckOut as [Ngày ra] , discount as [Giảm giá( % )]
 from Bill as b, TableFood as t
 where DateCheckIn >= @checkIn and DateCheckOut <= @checkOut and b.status = 1 and t.id = b.idTable
 end 
 go

CREATE PROC USP_UpdateAccount
@userName NVARCHAR(100), @displayName NVARCHAR(100), @password NVARCHAR(100), @newPassword NVARCHAR(100)
AS
BEGIN
	DECLARE @isRightPass INT = 0
	
	SELECT @isRightPass = COUNT(*) FROM dbo.Account WHERE USERName = @userName AND PassWord = @password
	
	IF (@isRightPass = 1)
	BEGIN
		IF (@newPassword = NULL OR @newPassword = '')
		BEGIN
			UPDATE dbo.Account SET DisplayName = @displayName WHERE UserName = @userName
		END		
		ELSE
			UPDATE dbo.Account SET DisplayName = @displayName, PassWord = @newPassword WHERE UserName = @userName
	end
END
GO

select *from Food

CREATE TRIGGER UTG_DeleteBillInfo
ON dbo.BillInfo FOR DELETE
AS 
BEGIN
	DECLARE @idBillInfo INT
	DECLARE @idBill INT
	SELECT @idBillInfo = id, @idBill = Deleted.idBill FROM Deleted
	
	DECLARE @idTable INT
	SELECT @idTable = idTable FROM dbo.Bill WHERE id = @idBill
	
	DECLARE @count INT = 0
	
	SELECT @count = COUNT(*) FROM dbo.BillInfo AS bi, dbo.Bill AS b WHERE b.id = bi.idBill AND b.id = @idBill AND b.status = 0
	
	IF (@count = 0)
		UPDATE dbo.TableFood SET status = N'Trống' WHERE id = @idTable
END
GO

select a.id as [ID], a.name as [Tên món], b.name as [Loại món], a.price as [Giá]
from Food as a , FoodCategory as b
where a.idCategory = b.id




go
create proc USP_GetListFood

 as
 begin
	select a.id as [ID], a.name as [Tên món], b.name as [Loại món], a.price as [Giá]
	from Food as a , FoodCategory as b
	where a.idCategory = b.id
 end 
 go

 CREATE FUNCTION [dbo].[fuConvertToUnsign1] ( @strInput NVARCHAR(4000) ) RETURNS NVARCHAR(4000) AS BEGIN IF @strInput IS NULL RETURN @strInput IF @strInput = '' RETURN @strInput DECLARE @RT NVARCHAR(4000) DECLARE @SIGN_CHARS NCHAR(136) DECLARE @UNSIGN_CHARS NCHAR (136) SET @SIGN_CHARS = N'ăâđêôơưàảãạáằẳẵặắầẩẫậấèẻẽẹéềểễệế ìỉĩịíòỏõọóồổỗộốờởỡợớùủũụúừửữựứỳỷỹỵý ĂÂĐÊÔƠƯÀẢÃẠÁẰẲẴẶẮẦẨẪẬẤÈẺẼẸÉỀỂỄỆẾÌỈĨỊÍ ÒỎÕỌÓỒỔỖỘỐỜỞỠỢỚÙỦŨỤÚỪỬỮỰỨỲỶỸỴÝ' +NCHAR(272)+ NCHAR(208) SET @UNSIGN_CHARS = N'aadeoouaaaaaaaaaaaaaaaeeeeeeeeee iiiiiooooooooooooooouuuuuuuuuuyyyyy AADEOOUAAAAAAAAAAAAAAAEEEEEEEEEEIIIII OOOOOOOOOOOOOOOUUUUUUUUUUYYYYYDD' DECLARE @COUNTER int DECLARE @COUNTER1 int SET @COUNTER = 1 WHILE (@COUNTER <=LEN(@strInput)) BEGIN SET @COUNTER1 = 1 WHILE (@COUNTER1 <=LEN(@SIGN_CHARS)+1) BEGIN IF UNICODE(SUBSTRING(@SIGN_CHARS, @COUNTER1,1)) = UNICODE(SUBSTRING(@strInput,@COUNTER ,1) ) BEGIN IF @COUNTER=1 SET @strInput = SUBSTRING(@UNSIGN_CHARS, @COUNTER1,1) + SUBSTRING(@strInput, @COUNTER+1,LEN(@strInput)-1) ELSE SET @strInput = SUBSTRING(@strInput, 1, @COUNTER-1) +SUBSTRING(@UNSIGN_CHARS, @COUNTER1,1) + SUBSTRING(@strInput, @COUNTER+1,LEN(@strInput)- @COUNTER) BREAK END SET @COUNTER1 = @COUNTER1 +1 END SET @COUNTER = @COUNTER +1 END SET @strInput = replace(@strInput,' ','-') 
 RETURN @strInput END
 
 select UserName, DisplayName, Type from Account

create table AccountType
(
	type int PRIMARY KEY not null,
	name nvarchar(100) not null
	
)
alter table Account
add CONSTRAINT fk_Account_AccountType FOREIGN KEY (Type) REFERENCES AccountType(type);

insert AccountType
(type , name) values (0, N'Nhân viên')

CREATE TABLE Account
(
	id INT IDENTITY PRIMARY KEY,
	UserName NVARCHAR(100),	
	DisplayName NVARCHAR(100) NOT NULL,
	PassWord NVARCHAR(1000) NOT NULL DEFAULT 0,
	Type INT NOT NULL  DEFAULT 0 -- 1: QuanLy && 0: NhanVien

	FOREIGN KEY (Type) REFERENCES AccountType(type)
)
GO
create table Emoloyees
(
	id int primary key not null,
	name nvarchar(100),
	gender nvarchar (10),
)
create table Employees
(
	id int IDENTITY primary key not null,
	name nvarchar(100),
	gender nvarchar (10),
	position int,
	sdt varchar(20),
	dayin date,
	totaltime float,
	totalsalary float,
	FOREIGN KEY (position) REFERENCES AccountType(type)

)




INSERT INTO Employees
        ( name ,
          gender ,
          position ,
          sdt,
		  dayin,
		  totaltime,
		  totalsalary
        )
VALUES  ( N'Phan Công Nam' ,
          N'Nam' ,  
          0 ,
		  '0123456789',
		   null,
		   0,  
			0 
        )
GO

create table Kho
(
	masp int IDENTITY PRIMARY KEY,
	tensp nvarchar(50) not null,
	dvt int,
	sl int,
)

create table PhieuNhap
(
	mapn int IDENTITY PRIMARY KEY,
	idnhanvien int,
	ngaynhap date,

	CONSTRAINT fk_idnhanvien FOREIGN KEY (idnhanvien) REFERENCES Employees(id)
)

create table Ctpn
(
	mactpn int IDENTITY PRIMARY KEY,
	mapn int not null,
	masp int not null,
	sl int not null,
	dvt int not null,
	dongia int not null,
	
	CONSTRAINT fk_mapn FOREIGN KEY (mapn) REFERENCES PhieuNhap(mapn),
	CONSTRAINT fk_sp FOREIGN KEY (masp) REFERENCES Kho(masp)
)

alter proc [dbo].[USP_GetListPhieuNhap]
 as
 begin
 select *
 from PhieuNhap 
 end 

 select name 
 from Employees
 where id = 8

alter proc USP_GetListCTPHPhieuNhap
@mapn int
 as
 begin
 select *
 from Ctpn
 where  Ma_PN = 1
 end
  
 drop table Ctpn
create table Ctpn
(
	id int IDENTITY PRIMARY KEY,
	Ma_PN int not null,
	Ma_SP int not null,
	SL int not null,
	DVT nvarchar(50) not null,
	DonGia int not null,
	
	CONSTRAINT fk_mapn FOREIGN KEY (Ma_PN) REFERENCES PhieuNhap(mapn),
	CONSTRAINT fk_sp FOREIGN KEY (Ma_SP) REFERENCES Kho(masp)
)

select max(mapn) from PhieuNhap

select * from Kho

